{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;\f2\fmodern\fcharset0 Courier;
\f3\froman\fcharset0 Times-Italic;\f4\fnil\fcharset0 HelveticaNeue;\f5\fnil\fcharset0 HelveticaNeue-Medium;
\f6\fnil\fcharset0 HelveticaNeue-Italic;}
{\colortbl;\red255\green255\blue255;\red14\green14\blue14;\red255\green255\blue255;\red0\green0\blue0;
\red252\green252\blue252;\red0\green0\blue153;\red17\green123\blue5;\red152\green0\blue3;\red15\green114\blue113;
\red15\green109\blue109;\red0\green0\blue153;\red14\green14\blue14;\red15\green114\blue113;\red152\green0\blue3;
\red17\green123\blue5;}
{\*\expandedcolortbl;;\cssrgb\c6667\c6667\c6667;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c99216\c99216\c99216;\cssrgb\c0\c0\c66667;\cssrgb\c1176\c54118\c1176;\cssrgb\c66667\c0\c0;\cssrgb\c784\c51765\c51765;
\cssrgb\c784\c49804\c50196;\cssrgb\c0\c0\c66667;\cssrgb\c6667\c6667\c6667;\cssrgb\c784\c51765\c51765;\cssrgb\c66667\c0\c0;
\cssrgb\c1176\c54118\c1176;}
\paperw11900\paperh16840\margl1440\margr1440\vieww33400\viewh18420\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://fivestars.blog/swift/disfavoredOverload.html"}}{\fldrslt 
\f0\fs36 \cf0 https://fivestars.blog/swift/disfavoredOverload.html}}
\f0\fs36 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 Gi\uc0\u7899 i thi\u7879 u
\f0\b0\fs36 \
B\'e0i vi\uc0\u7871 t gi\u7899 i thi\u7879 u v\u7873  overloading trong Swift v\'e0 v\'e0i t\'ecnh hu\u7889 ng nh\u7853 p nh\u7857 ng m\'e0 ta c\'f3 th\u7875  g\u7863 p ph\u7843 i. Ngo\'e0i ra c\'f2n gi\u7899 i thi\u7879 u v\u7873  
\f2\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
@_disfavoredOverload
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\

\f1\b\fs60 Hidden principle
\fs44 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\i\b0\fs36 \cf0 Jordan Rose:
\f1\i0\b\fs44  {\field{\*\fldinst{HYPERLINK "https://forums.swift.org/t/compiler-choosing-between-functions-with-no-parameters-vs-functions-with-default-parameters/23501/2"}}{\fldrslt 
\f4\b0\fs32 \cf4 \cb5 \expnd0\expndtw0\kerning0
\ul \ulc4 \'93The general principle is that the most specific overload should win\'94}}
\f4\b0\fs32 \cf2 \cb5 \expnd0\expndtw0\kerning0
.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \

\f1\b\fs44 1. Void vs default value\

\f0\b0\fs36 \
\pard\pardeftab720\partightenfactor0

\f2\fs30 \cf6 \cb3 \expnd0\expndtw0\kerning0
func\cf2  \cf7 sameName\cf2 () \{\
  ...\
\}\
\
\cf6 func\cf2  \cf7 sameName\cf2 (\cf8 value\cf2 : \cf9 Int\cf2  = \cf10 5\cf2 ) \{\
  ...\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
sameName() specific h\uc0\u417 n sameName(value:). Do \u273 \'f3, sameName() \u273 \u432 \u7907 c g\u7885 i\
\

\f1\b\fs44 2. Protocol v\'e0 conforming type c\uc0\u7911 a protocol\
\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs30 \cf6 \cb3 \expnd0\expndtw0\kerning0
func\cf2  \cf7 sameName\cf2 (_ \cf8 number\cf2 : \cf9 Int\cf2 ) \{\
  ...\
\}\
\
\cf6 func\cf2  sameName<\cf9 N\cf2 : \cf9 Numeric\cf2 >(_ \cf8 number\cf2 : \cf9 N\cf2 ) \{\
  ...\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 \cb1 \kerning1\expnd0\expndtw0 \

\f0\b0\fs36 sameName(_ Int) specific h\uc0\u417 n sameName<N: Numeric>(_ N). Do \u273 \'f3, sameName(_ Int)  \u273 \u432 \u7907 c g\u7885 i.
\f1\b\fs44 \
\
3. Variadic vs non\
\
\pard\pardeftab720\partightenfactor0

\f2\b0\fs30 \cf6 \cb3 \expnd0\expndtw0\kerning0
func\cf2  \cf7 sameName\cf2 (_ \cf8 number\cf2 : \cf9 Int\cf2 ) \{\
  ...\
\}\
\
\cf6 func\cf2  \cf7 sameName\cf2 (_ \cf8 numbers\cf2 : \cf9 Int\cf2 ...) \{\
  ...\
\}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 \cb1 \kerning1\expnd0\expndtw0 \

\f0\b0\fs36 sameName(_ Int) specific h\uc0\u417 n sameName(_ Int\'85.). Do \u273 \'f3, sameName(_ Int)  \u273 \u432 \u7907 c g\u7885 i.
\f1\b\fs44 \
\pard\pardeftab720\sa300\partightenfactor0

\fs60 \cf2 \cb5 \expnd0\expndtw0\kerning0
\
@_disfavoredOverload
\f5\b0 \
\pard\pardeftab720\partightenfactor0

\f6\i\fs36 \cf4 The underscore in front of the attribute means that this Swift feature hasn\'92t gone through Swift Evolution just yet, proceed at your own discretion.\cb1 \
\cb5 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\i0 \cf0 \cb1 \kerning1\expnd0\expndtw0 D\'f9ng 
\f2\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
@_disfavoredOverload 
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 s\uc0\u7869  h\u7841  rank c\u7911 a func \u273 i k\'e8m. \
V\'ed d\uc0\u7909 \
\pard\pardeftab720\partightenfactor0

\f2\fs30 \cf6 \cb3 \expnd0\expndtw0\kerning0
@_disfavoredOverload\cf2  
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f2\fs30 \cf6 \cb3 \expnd0\expndtw0\kerning0
func\cf2  \cf7 sameName\cf2 () \{\
  ...\
\}\
\
\cf6 func\cf2  \cf7 sameName\cf2 (\cf8 value\cf2 : \cf9 Int\cf2  = \cf10 5\cf2 ) \{\
  ...\
\}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 H\'e0m sameName() l\'fac n\'e0y l\uc0\u7841 i \u273 \u432 \u7907 c xem l\'e0 \'edt specific h\u417 n sameName(value: Int). Do \u273 \'f3, sameName(value: Int) s\u7869  \u273 \u432 \u7907 c g\u7885 i.
\f2\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
 \
\pard\pardeftab720\partightenfactor0

\f6\i\fs36 \cf4 \cb5 \
\pard\pardeftab720\sa300\partightenfactor0

\f1\i0\b\fs60 \cf2 \cb5 SwiftUI
\f6\i\b0\fs36 \cf4 \cb5 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\i0 \cf0 \cb1 \kerning1\expnd0\expndtw0 SwiftUI d\uc0\u7921 a r\u7845 t nhi\u7873 u v\'e0o 
\f2\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
@_disfavoredOverload 
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 trong c\'e1c declaration.\
V\'ed d\uc0\u7909 : Text trong SwiftUI\
\
\pard\pardeftab720\partightenfactor0

\f2\fs30 \cf11 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 public\cf12 \strokec12  \cf11 \strokec11 init\cf12 \strokec12 <\cf13 \strokec13 S\cf12 \strokec12 : \cf13 \strokec13 StringProtocol\cf12 \strokec12 >(_ \cf14 \strokec14 content\cf12 \strokec12 : \cf13 \strokec13 S\cf12 \strokec12 )\
\cf11 \strokec11 public\cf12 \strokec12  \cf15 \strokec15 init\cf12 \strokec12 (_ \cf14 \strokec14 key\cf12 \strokec12 : \cf13 \strokec13 LocalizedStringKey\cf12 \strokec12 , \cf14 \strokec14 tableName\cf12 \strokec12 : \cf13 \strokec13 String\cf12 \strokec12 ? = \cf11 \strokec11 nil\cf12 \strokec12 , \cf14 \strokec14 bundle\cf12 \strokec12 : \cf13 \strokec13 Bundle\cf12 \strokec12 ? = \cf11 \strokec11 nil\cf12 \strokec12 , \cf14 \strokec14 comment\cf12 \strokec12 : \cf13 \strokec13 StaticString\cf12 \strokec12 ? = \cf11 \strokec11 nil\cf12 \strokec12 )\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
H\'e0m init \uc0\u273 \u7847 u ti\'ean specific h\u417 n h\'e0m th\u7913  2 nh\u432 ng h\'e0m \u273 \u7847 u ti\'ean init<S: StringProtocol> \u273 \'e3 \u273 \u432 \u7907 c g\'e1n 
\f2\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
@_disfavoredOverload.
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \

\f6\i \cf4 \cb5 \expnd0\expndtw0\kerning0
\
}