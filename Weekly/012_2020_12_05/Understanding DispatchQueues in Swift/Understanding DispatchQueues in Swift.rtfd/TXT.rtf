{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\froman\fcharset0 Times-Bold;\f2\fnil\fcharset0 Menlo-Regular;
\f3\froman\fcharset0 Times-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red31\green31\blue31;\red239\green239\blue239;\red31\green31\blue31;
}
{\*\expandedcolortbl;;\cssrgb\c16078\c16078\c16078;\cssrgb\c94902\c94902\c94902;\cssrgb\c16078\c16078\c16078;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww33400\viewh18280\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://medium.com/better-programming/understanding-dispatchqueues-2eb72ba965f4"}}{\fldrslt 
\f0\fs36 \cf0 https://medium.com/better-programming/understanding-dispatchqueues-2eb72ba965f4}}
\f0\fs36 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\fs24 \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 Gi\uc0\u7899 i thi\u7879 u
\f0\b0\fs36 \
B\'e0i vi\uc0\u7871 t tr\'ecnh b\'e0y v\u7873  Process v\'e0 Thread, sau \u273 \'f3 t\'e1c gi\u7843  t\u7853 p trung ph\'e2n t\'edch v\u7873  c\'e1c \u273 \u7863 c \u273 i\u7875 m v\'e0 nh\u7919 ng v\u7845 n \u273 \u7873  li\'ean quan \u273 \u7871 n DispatchQueues.\
\

\f1\b\fs44 Process
\f0\b0\fs36 \
C\'f3 th\uc0\u7875  hi\u7875 u Process nh\u432  l\'e0 1 running program, app c\u7911 a ch\'fang ta l\'e0 1 process, Safari l\'e0 1 process, Slack l\'e0 1 process, v.v\'85\
N\'f3 ch\uc0\u7913 a 1 list c\'e1c instructions (code c\u7911 a ch\'fang ta \u7903  Assembly format) v\'e0 n\'f3 n\u7857 m \u7903  tr\'ean disk cho \u273 \u7871 n khi user mu\u7889 n run n\'f3. OS sau \u273 \'f3 s\u7869  load process v\'e0o memory, start 1 instruction pointer \u273 \u7875  cho ch\'fang ta bi\u7871 t \u273 \u432 \u7907 c instruction n\'e0o c\u7911 a program \u273 ang \u273 \u432 \u7907 c th\u7921 c thi. CPU s\u7869  tu\u7847 n t\u7921  th\u7921 c thi c\'e1c instruction cho \u273 \u7871 n khi k\u7871 t th\'fac, terminate process.\
\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Address space of a single-thread process\
|- - - - - - - - - - - - - - - - - - - - - - - - - - |\
|                    Instructions                    |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
|                    Global Data                     |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
|           malloc'd data (Reference Types)          |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
| Nothing (Stack and malloc'd data grow towards here)|\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
|   Stack (Value Types (if possible), args, returns) |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
M\uc0\u7895 i process s\u7869  c\'f3 1 ph\u7847 n physical memory d\'e0nh ri\'eang cho n\'f3, addresses kh\'f4ng \u273 \u432 \u7907 c share v\u7899 i c\'e1c process kh\'e1c.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 C\'e1ch CPU run nhi\uc0\u7873 u process c\'f9ng l\'fac
\f0\b0\fs36 \
C\'e2u tr\uc0\u7843  l\u7901 i l\'e0 n\'f3 kh\'f4ng th\u7875 . M\u7897 t CPU \u273 \u417 n gi\u7843 n l\'e0 kh\'f4ng th\u7875  l\'e0m 2 th\u7913  c\'f9ng 1 th\u7901 i \u273 i\u7875 m. C\'f3 th\u7875  kh\'e1c bi\u7879 t \u273 \'f4i ch\'fat v\u7899 i CPU c\'f3 multiple core, nh\u432 ng v\u7873  c\u417  b\u7843 n th\'ec v\u7851 n l\'e0 kh\'f4ng \u273 \u7893 i. C\'e1i th\u7921 c s\u7921  x\u7843 y ra ch\'ednh l\'e0 CPU s\u7869  excute g\'ec \u273 \'f3  c\u7911 a Process 1, sau \u273 \'f3 excute g\'ec \u273 \'f3 c\u7911 a Process 2 v\'e0 ti\u7871 p t\u7909 c. OS s\u7869  l\u432 u l\u7841 i b\u7845 t c\u7913  g\'ec m\'e0 CPU \u273 ang l\'e0m cho 1 process c\u7909  th\u7875  trong memory (d\u432 \u7899 i d\u7841 ng registers v\'e0 pointers), sau \u273 \'f3 s\u7869  quy\u7871 t \u273 \u7883 nh process n\'e0o ti\u7871 p theo s\u7869  \u273 \u432 \u7907 c excute, kh\'f4i ph\u7909 c l\u7841 i c\'e1i \u273 ang l\'e0m (registers v\'e0 pointers) c\u7911 a process \u273 \'f3, v\'e0 CPU ti\u7871 p t\u7909 c run process \u273 \'f3. Qu\'e1 tr\'ecnh n\'e0y g\u7885 i l\'e0 
\f3\i\b context switch
\f0\i0\b0  v\'e0 n\'f3 di\uc0\u7877 n ra r\u7845 t nhanh n\'ean l\'e0m cho ta ngh\u297  l\'e0 th\u7921 c s\u7909  run nhi\u7873 u process c\'f9ng l\'fac.\
\

\f1\b\fs44 Thread
\f0\b0\fs36 \
\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Address space of a multi-threaded process\
|- - - - - - - - - - - - - - - - - - - - - - - - - - |\
|                    Instructions                    |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
|                    Global Data                     |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
|           malloc'd data (Reference Types)          |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
| Nothing (Stack and malloc'd data grow towards here)|\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
|                 Stack of Thread 2                  |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -\
|                 Stack of Thread 1                  |\
|- - - - - - - - - - - - - - - - - - - - - - - - - - -
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
M\uc0\u7897 t process c\'f3 th\u7875  l\'e0 single-thread process ho\u7863 c multi-thread process.\
V\uc0\u7873  c\u417  b\u7843 n, c\'f3 th\u7875  xem thread th\u7921 c s\u7921  r\u7845 t gi\u7889 ng v\u7899 i process ngo\u7841 i tr\u7915  1 \u273 i\u7875 m kh\'e1c bi\u7879 t: ch\'fang share chung address space (c\u7911 a process) v\'e0 do \u273 \'f3 c\'f3 th\u7875  access same data.\
C\uc0\u361 ng nh\u432  process, CPU kh\'f4ng th\u7875  run 2 thread c\'f9ng l\'fac v\'e0 c\u361 ng nh\u432  process, thread c\u361 ng s\u7869  c\'f3 
\f3\i\b context switch
\f0\i0\b0 .\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 iOS main thread
\f0\b0\fs36 \
iOS app s\uc0\u7869  c\'f3 1 v\'e0i thread, main thread v\u7873  c\u417  b\u7843 n l\'e0 starting point c\u7911 a excution. Mai thread execute 1 loop m\u7895 i frame (RunLoop), draw current screen n\u7871 u c\u7847 n, handle UI events (ch\u7859 ng h\u7841 n nh\u432  touch), v\'e0 execute n\u7897 i dung c\u7911 a DispatchQueues.main. N\'f3 c\'f3 priority r\u7845 t cao, \u273 \u432 \u7907 c execute g\u7847 n nh\u432  ngay l\u7853 p t\u7913 c. Tuy nhi\'ean, ch\'fang ta kh\'f4ng n\'ean handle m\u7885 i th\u7913  trong main thread v\'ec s\u7869  l\'e0m cho main thread ph\u7843 i x\u7917  l\'fd qu\'e1 nhi\u7873 u task g\'e2y delay update UI.\
\

\f1\b\fs44 iOS background thread v\'e0 DispatchQueues 
\f0\b0\fs36 \
Background thread l\'e0 b\uc0\u7845 t c\u7913  thread n\'e0o kh\'f4ng ph\u7843 i main thread. Trong iOS, c\'e1ch d\u7877  nh\u7845 t \u273 \u7875  spawning 1 background thread l\'e0 d\'f9ng DispatchQueues.\
DispatchQueues kh\'f4ng ph\uc0\u7843 i l\'e0 thread, n\'f3 gi\'fap t\u7921  \u273 \u7897 ng t\u7841 o ho\u7863 c reuse thread t\u7915  thread pool khi c\u7847 n.\
\

\f1\b\fs44 Background Queues Priorities
\f0\b0\fs36 \
B\uc0\u7857 ng c\'e1ch g\'e1n QoS cho 1 action, ta c\'f3 th\u7875  ch\u7881  \u273 \u7883 nh t\u7847 m quan tr\u7885 ng c\u7911 a n\'f3 v\'e0 system s\u7869  prioritize n\'f3 v\'e0 schedule n\'f3 t\u432 \u417 ng \u7913 ng.\
Qos:\
\pard\tx220\tx720\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\li720\fi-720\pardirnatural\partightenfactor0
\ls1\ilvl0\cf0 {\listtext	\uc0\u8226 	}UserInteractive: for work ph\uc0\u7843 i \u273 \u432 \u7907 c processed ngay l\u7853 p t\u7913 c\
{\listtext	\uc0\u8226 	}UserInitiated: for work g\uc0\u7847 n nh\u432  \u273 \u7891 ng th\u7901 i (1 v\'e0i second ho\u7863 c \'edt h\u417 n)\
{\listtext	\uc0\u8226 	}Utility: for work c\'f3 th\uc0\u7875  take time, v\'ed d\u7909  API call\
{\listtext	\uc0\u8226 	}Background: for work take r\uc0\u7845 t nhi\u7873 u time.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 \uc0\u7842 nh h\u432 \u7903 ng c\u7911 a c\'e1c QoS level kh\'e1c nhau
\f0\b0\fs36 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f3\i\b \cf0 Heavy task tr\'ean main thread
\f0\i0\b0 \
\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 @IBAction func actionOne(_ sender: Any) \{\
    //We are already in the main thread, but we will use a dispatch operation\
    //to see how long it takes for the task to begin.\
    DispatchQueue.main.async \{ [unowned self] in\
        self.timeIntensiveTask()\
    \}\
\}
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
Take kho\uc0\u7843 ng 5 gi\'e2y, to\'e0n b\u7897  screen b\u7883  freeze\
\

\f3\i\b Heavy task tr\'ean UserInitiated QoS thread
\f0\i0\b0 \
\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 @IBAction func actionOne(_ sender: Any) \{\
    DispatchQueue.global(qos: .userInitiated).async \{ [unowned self] in\
        self.timeIntensiveTask()\
    \}\
\}
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
No screen freeze v\'e0 n\'f3 c\uc0\u361 ng take kho\u7843 ng 5 gi\'e2y \u273 \u7875  complete\
\

\f3\i\b Heavy task tr\'ean Background QoS thread
\f0\i0\b0 \
\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 @IBAction func actionOne(_ sender: Any) \{\
    DispatchQueue.global(qos: .background).async \{ [unowned self] in\
        self.timeIntensiveTask()\
    \}\
\}
\f0\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
C\uc0\u361 ng g\u7847 n gi\u7889 ng UserInitated QoS, tuy nhi\'ean n\'f3 take some time \u273 \u7875  start v\'e0 c\u7847 n kho\u7843 ng 10 gi\'e2y \u273 \u7875  end.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b\fs44 \cf0 Sync v\'e0 Async
\f0\b0\fs36 \
\
}